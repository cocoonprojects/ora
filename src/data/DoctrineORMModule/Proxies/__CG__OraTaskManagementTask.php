<?php

namespace DoctrineORMModule\Proxy\__CG__\Ora\TaskManagement;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Task extends \Ora\TaskManagement\Task implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'Ora\\TaskManagement\\Task' . "\0" . 'subject', '' . "\0" . 'Ora\\TaskManagement\\Task' . "\0" . 'status', '' . "\0" . 'Ora\\TaskManagement\\Task' . "\0" . 'project', '' . "\0" . 'Ora\\TaskManagement\\Task' . "\0" . 'members', 'id', 'createdAt', 'createdBy', 'mostRecentEditAt', 'mostRecentEditBy', 'version', 'recordedEvents');
        }

        return array('__isInitialized__', '' . "\0" . 'Ora\\TaskManagement\\Task' . "\0" . 'subject', '' . "\0" . 'Ora\\TaskManagement\\Task' . "\0" . 'status', '' . "\0" . 'Ora\\TaskManagement\\Task' . "\0" . 'project', '' . "\0" . 'Ora\\TaskManagement\\Task' . "\0" . 'members', 'id', 'createdAt', 'createdBy', 'mostRecentEditAt', 'mostRecentEditBy', 'version', 'recordedEvents');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Task $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function delete(\Ora\User\User $deletedBy)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'delete', array($deletedBy));

        return parent::delete($deletedBy);
    }

    /**
     * {@inheritDoc}
     */
    public function getStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatus', array());

        return parent::getStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function complete(\Ora\User\User $completedBy)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'complete', array($completedBy));

        return parent::complete($completedBy);
    }

    /**
     * {@inheritDoc}
     */
    public function accept(\Ora\User\User $acceptedBy)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'accept', array($acceptedBy));

        return parent::accept($acceptedBy);
    }

    /**
     * {@inheritDoc}
     */
    public function getSubject()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSubject', array());

        return parent::getSubject();
    }

    /**
     * {@inheritDoc}
     */
    public function setSubject($subject, \Ora\User\User $updatedBy)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSubject', array($subject, $updatedBy));

        return parent::setSubject($subject, $updatedBy);
    }

    /**
     * {@inheritDoc}
     */
    public function changeProject(\Ora\ProjectManagement\Project $project, \Ora\User\User $updatedBy)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'changeProject', array($project, $updatedBy));

        return parent::changeProject($project, $updatedBy);
    }

    /**
     * {@inheritDoc}
     */
    public function getProject()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProject', array());

        return parent::getProject();
    }

    /**
     * {@inheritDoc}
     */
    public function addMember(\Ora\User\User $user, \Ora\User\User $addedBy, $role = 'member')
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addMember', array($user, $addedBy, $role));

        return parent::addMember($user, $addedBy, $role);
    }

    /**
     * {@inheritDoc}
     */
    public function removeMember(\Ora\User\User $member, \Ora\User\User $removedBy)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeMember', array($member, $removedBy));

        return parent::removeMember($member, $removedBy);
    }

    /**
     * {@inheritDoc}
     */
    public function getMembers()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMembers', array());

        return parent::getMembers();
    }

    /**
     * {@inheritDoc}
     */
    public function serialize()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'serialize', array());

        return parent::serialize();
    }

    /**
     * {@inheritDoc}
     */
    public function unserialize($encodedData)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'unserialize', array($encodedData));

        return parent::unserialize($encodedData);
    }

    /**
     * {@inheritDoc}
     */
    public function whenMemberRemoved(\Ora\TaskManagement\MemberRemoved $event)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'whenMemberRemoved', array($event));

        return parent::whenMemberRemoved($event);
    }

    /**
     * {@inheritDoc}
     */
    public function whenProjectChanged(\Ora\TaskManagement\ProjectChanged $event)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'whenProjectChanged', array($event));

        return parent::whenProjectChanged($event);
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedAt', array());

        return parent::getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedBy()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedBy', array());

        return parent::getCreatedBy();
    }

    /**
     * {@inheritDoc}
     */
    public function getMostRecentEditAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMostRecentEditAt', array());

        return parent::getMostRecentEditAt();
    }

    /**
     * {@inheritDoc}
     */
    public function getMostRecentEditBy()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMostRecentEditBy', array());

        return parent::getMostRecentEditBy();
    }

    /**
     * {@inheritDoc}
     */
    public function equals(\Ora\DomainEntity $object = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'equals', array($object));

        return parent::equals($object);
    }

}
